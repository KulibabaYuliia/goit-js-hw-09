{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,kBACjCE,EAASH,SAASC,cAAc,iBAChCG,EAAWJ,SAASC,cAAc,mBA+BxC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAvCbR,EAAOgB,iBAAiB,UAAUC,IAChCA,EAAEC,iBAEF,MAAMC,EAAUC,OAAOf,EAASgB,OAC1BC,EAASF,OAAOjB,EAAQkB,OACxBE,EAAQH,OAAOhB,EAAOiB,OAE5B,GAAIF,GAAW,GAAKG,EAAS,GAAKC,EAAQ,EACxCC,EAAA1B,GAAS2B,OAAOC,QAAQ,yCAI1B,IAAK,IAAIC,EAAI,EAAGA,GAAKR,EAASQ,GAAK,EAAG,CAGpCrB,EAAcqB,EAFDL,EAASC,GAASI,EAAI,IAGhCC,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBgB,EAAA1B,GAAS2B,OAAOI,QACd,uBAAqBtB,QAAiBC,MAAU,IAGnDsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBgB,EAAA1B,GAAS2B,OAAOC,QACd,sBAAoBnB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\n\nformEl.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const amountN = Number(amountEl.value);\n  const delayN = Number(delayEl.value);\n  const stepN = Number(stepEl.value);\n\n  if (amountN <= 0 || delayN < 0 || stepN < 0) {\n    Notiflix.Notify.failure(`❌ Please insert positive numbers`);\n    return;\n  }\n\n  for (let i = 1; i <= amountN; i += 1) {\n    let delays = delayN + stepN * (i - 1);\n\n    createPromise(i, delays)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","amountN","Number","value","delayN","stepN","$parcel$interopDefault","Notify","failure","i","then","success","catch"],"version":3,"file":"03-promises.48580b87.js.map"}